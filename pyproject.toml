[tool.pytest.ini_options]
minversion = "7.0"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=html:tests/coverage/html",
    "--cov-report=xml:tests/coverage/coverage.xml",
    "--cov-report=term-missing",
    "--cov-branch",
    "--cov-fail-under=80",
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "azure: marks tests that require Azure services",
    "mock: marks tests that use mock data",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
timeout = 300

# Coverage configuration
[tool.coverage.run]
source = ["app"]
omit = [
    "app/api/__init__.py",
    "app/api/controllers/__init__.py",
    "app/config/__init__.py",
    "app/data/__init__.py", 
    "app/parsers/header_parser/__init__.py",
    "app/parsers/question_parser/__init__.py",
    "app/services/adapters/__init__.py",
    "app/services/base/__init__.py",
    "app/services/providers/__init__.py", 
    "app/services/storage/__init__.py",
    "app/services/utils/__init__.py",
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*"
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "pass",
    "except ImportError:",
    "except ModuleNotFoundError:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
skip_covered = true
skip_empty = true
precision = 2
show_missing = true

[tool.coverage.html]
directory = "tests/coverage/html"
skip_covered = false
skip_empty = true

[tool.coverage.xml]
output = "tests/coverage/coverage.xml"
